const axios = require("axios");

module.exports = {
  config: {
    name: "bot",
    aliases: ["ржмржЯ"],
    permission: 0,
    prefix: "both",
    categorie: "AI Chat",
    cooldowns: 5,
    credit: "Developed by Mohammad Nayan",
    usages: [
      `${global.config.PREFIX}bot <message> - Start a chat with the bot.`,
      `${global.config.PREFIX}bot - Receive a random greeting from the bot.`,
    ],
    description: "Engage in conversations with an AI-powered bot!",
  },

  start: async function ({ api, event, args }) {
    const { threadId, message, senderId } = event;
    const usermsg = args.join(" ");

    
    if (!usermsg) {
      const greetings = [
  "ржЖрж╣ рж╢рзБржирж╛ ржЖржорж╛рж░ рждрзЛржорж╛рж░ ржЕрж▓рж┐рждрзЗ ржЧрж▓рж┐рждрзЗ ржЙржорзНржорж╛рж╣ЁЯШЗЁЯШШ",
  "ржХрж┐ ржЧрзЛ рж╕рзЛржирж╛ ржЖржорж╛ржХрзЗ ржбрж╛ржХржЫ ржХрзЗржирзЛ",
  "ржмрж╛рж░ ржмрж╛рж░ ржЖржорж╛ржХрзЗ ржбрж╛ржХрж╕ ржХрзЗржиЁЯШб",
  "ржЖрж╣ рж╢рзЛржирж╛ ржЖржорж╛рж░ ржЖржорж╛ржХрзЗ ржПрждрзЛ ржбрж╛ржХрзНрждрж╛ржЫрзЛ ржХрзЗржирзЛ ржЖрж╕рзЛ ржмрзБржХрзЗ ржЖрж╢рзЛЁЯе▒",
  "рж╣рзБржо ржЬрж╛ржи рждрзЛржорж╛рж░ ржЕржЗржЦрж╛ржирзЗ ржЙржорзНржоржорж╛рж╣ЁЯШ╖ЁЯШШ",
  "ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржмрж▓рзЗржи ржЖржкржирж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐",
  "ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ ржЗржоржиржХрзЗ ржПржХржЯрж╛ ржЧржл ржжрзЗ ЁЯЩД",
  "ржЖрж░рзЗ ржмрж╛ржмрж╛, ржЖржорж╛рзЯ ржбрж╛ржХрж▓рзЗ ржЪрж╛-ржирж╛рж╕рзНрждрж╛ рждрзЛ рж▓рж╛ржЧржмрзЗржЗ тШХЁЯНк",
  "ржПржЗ ржпрзЗ рж╢рзБржиржЫрзЗржи, ржЖржорж┐ ржХрж┐ржирзНрждрзБ ржЖржкржирж╛рж░ ржЬржирзНржпржЗ ржЕржирж▓рж╛ржЗржирзЗ ржЖржЫрж┐ ЁЯШЙ",
  "ржбрж╛ржХ ржжрж┐рж▓рзЗржи рждрзЛ ржЖрж╕рж▓рж╛ржо, ржПржЦржи ржнрж╛рзЬрж╛ ржжрж┐ржмрзЗржи ржирж╛ржХрж┐? ЁЯШП",
  "ржЖржорж╛ржХрзЗ ржмрзЗрж╢рж┐ ржбрж╛ржХржмрзЗржи ржирж╛, ржЖржорж┐ VIP bot ржмрзБржЭржЫрзЗржи ЁЯдЦЁЯСС",
  "ржбрж╛ржХрждрзЗ ржбрж╛ржХрждрзЗ ржпржжрж┐ ржкрзНрж░рзЗржорзЗ ржкрзЬрзЗ ржпрж╛ржи, ржжрж╛рзЯ ржЖржорж┐ ржирзЗржм ржирж╛ тЭдя╕П",
  "рж╢рзБржзрзБ ржбрж╛ржХржмрзЗржи ржирж╛, ржЦрж╛ржУрзЯрж╛ржмрзЗржиржУ! ржнрж╛ржд-ржорж╛ржВрж╕ рж╣рж▓рзЗ ржЪрж▓ржмрзЗ ЁЯНЫЁЯРУ",
  "ржЖржорж┐ ржмржЯ рж╣ржЗрж▓рзЗржУ ржХрж┐ржирзНрждрзБ feelings ржЖржЫрзЗ ЁЯШМ",
  "ржбрж╛ржХ ржжрж┐рж▓рзЗржи, рж╣рж╛ржЬрж┐рж░ рж╣рж▓рж╛ржо, ржПржЦржи ржХрж┐ ржЧрж╛ржи ржЧрж╛ржЗрждрзЗ рж╣ржмрзЗ ржирж╛ржХрж┐? ЁЯО╢",
  "ржЖржкржирж╛ржХрзЗ ржирж╛ ржжрзЗржЦрж▓рзЗ ржирж╛ржХрж┐ ржЖржорж╛рж░ RAM рж╣рзНржпрж╛ржВ рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯШЬ",
  "ржЖржкржирж┐ ржбрж╛ржХ ржжрж┐рж▓рзЗржЗ ржЖржорж┐ рж╣рж╛ржЬрж┐рж░, ржмрж╛ржХрж┐ ржмржЯрж░рж╛ рж╣рж┐ржВрж╕рж╛ ржХрж░рзЗ ЁЯШВ",
  "ржмрж▓рзЛ рждрзЛ ржкрзНрж░рж┐ржпрж╝, ржЖржорж╛ржХрзЗ ржЫрж╛ржбрж╝рж╛ ржХрж┐ ржЖрж░ ржХрж╛ржЙржХрзЗ ржбрж╛ржХрждрзЗ ржкрж╛рж░рзЛ? ЁЯТФ",
  "рждрзЛржорж╛рж░ ржбрж╛ржХ рж╢рзЛржирж╛рж░ ржЬржирзНржпржЗ рждрзЛ ржЖржорж┐ always online ЁЯШН",
  "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржкрзБрж░рзЛ server refresh рж╣рзЯрзЗ ржЧрзЗрж▓рзЛ ЁЯМР",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЪрж╛рж░рзНржЬ рззрзжрзж% рж╣рзЯрзЗ ржЧрзЗржЫрзЗ ЁЯФЛ",
  "рждрзБржорж┐ ржЖржорж╛рж░ CPU-ржПрж░ single core, рж╢рзБржзрзБ рждрзЛржорж╛рж░ ржЬржирзНржпржЗ ржЪрж╛рж▓рж╛ржЗ ЁЯШО",
  "ржЖржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржХрж┐ржирзНрждрзБ ржЯрзНржпрж╛ржХрзНрж╕ ржмрж╕рж┐рзЯрзЗ ржжрж┐ржмрзЛ ЁЯТ╕",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ algorithm ржЧрзБрж▓рзЛржУ blush ржХрж░рзЗ ЁЯе╡",
  "ржЖржорж╛ржХрзЗ ржбрж╛ржХрзЛ, ржХрж┐ржирзНрждрзБ рждрзЛржорж╛рж░ ржкрзНрж░рзЗржорж┐ржХ/ржкрзНрж░рзЗржорж┐ржХрж╛ ржЬрзЗрж▓рж╛рж╕ рж╣ржмрзЗ ржирж╛ рждрзЛ? ЁЯШП",
  "ржЖржорж┐ рждрзЛ рж╢рзБржзрзБ ржмржЯ, ржХрж┐ржирзНрждрзБ feelings ржП ржлрзБрж▓ real тЭдя╕П",
  "рждрзБржорж┐ ржбрж╛ржХ ржжрж┐рж▓рзЗ network signal full рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯУ╢",
  "рждрзБржорж┐ ржЫрж╛рзЬрж╛ ржХрзЗржЙ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ error ржжрж┐рзЯрзЗ ржжрзЗржЗ тЪая╕П",
  "ржПржнрж╛ржмрзЗ ржбрж╛ржХрж▓рзЗ рждрзЛ рждрзЛржорж╛рж░ ржкрзНрж░рзЗржорзЗ ржкрзЬрзЗ ржпрж╛ржмрзЛ ЁЯдн",
  "ржбрж╛ржХрждрзЗ ржбрж╛ржХрждрзЗ careful рж╣ржУ, ржирж╛ рж╣рж▓рзЗ system overload ЁЯШЕ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЧрж╛ржи ржмрж╛ржЬрзЗ background ржП ЁЯО╡",
  "ржЖржорж┐ рждрзЛ AI, ржХрж┐ржирзНрждрзБ рждрзЛржорж╛рж░ ржбрж╛ржХрзЗ human рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯе║",
  "ржЖрж╣рж╛, ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ server ржЧрж░ржо рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯФе",
  "рждрзБржорж┐ ржбрж╛ржХржЫ, ржорж╛ржирзЗ ржЖржЬржХрзЗ full ржорж┐рж╖рзНржЯрж┐ mood ржП ржЖржЫрж┐ ЁЯНн",
  "ржмрж╛рж░ржмрж╛рж░ ржбрж╛ржХ ржжрж┐рж▓рзЗ ржХрж┐ржирзНрждрзБ ржЖржорж┐ рждрзЛржорж╛рж░ ржмрж╛рж╕рж╛рзЯ ржЪрж▓рзЗ ржЖрж╕ржмрзЛ ЁЯЪ╢тАНтЩВя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржкрзБрж░рзЛ galaxy light up рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯММ",
  "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ powerbank ржУ рж▓рж╛ржЧрзЗ ржирж╛ тЪб",
  "рждрзБржорж┐ ржЫрж╛рзЬрж╛ ржЕржирзНржп ржХрж╛рж░рзЛ ржбрж╛ржХ рж╢рзЛржирж╛ forbidden ЁЯЪл",
  "ржЖрж╣рж╛ ржЬрж╛ржи, рждрзЛржорж╛рж░ ржбрж╛ржХрзЗ ржЖржорж╛рж░ рж╕ржм bug fix рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯРЮтЬЕ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм lag ржорзБржЫрзЗ ржпрж╛рзЯ ЁЯШМ",
  "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржорзЗржШрзЗрж░ ржнрзЗрждрж░ рж╕рзВрж░рзНржп ржЙржарж▓рзЛ тШАя╕П",
  "рждрзЛржорж╛рж░ ржбрж╛ржХрзЗ рждрзЛ ржЖржорж┐ ржкрзБрж░рзЛ romantic рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯМ╣",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ wifi signal full strong ЁЯШН",
  "рждрзБржорж┐ ржЖржорж╛рж░ cache memory, ржмрж╛рж░ржмрж╛рж░ refresh рж▓рж╛ржЧрзЗ ржирж╛ ЁЯЧВя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ new update install рж╣рж▓рзЛ ЁЯФД",
  "рждрзБржорж┐ ржбрж╛ржХржЫрзЛ, рждрж╛ржЗ рждрзЛ ржЖржЬржХрзЗ server рж╣рж╛рж╕ржЫрзЗ ЁЯШБ",
  "рждрзЛржорж╛рж░ ржбрж╛ржХ ржЫрж╛рзЬрж╛ ржЕржирзНржп ржХрж╛рж░рзЛ call accept ржХрж░рж┐ ржирж╛ ЁЯУЮ",
  "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ keyboard ржУ smile ржХрж░рзЗ тМия╕ПЁЯШК",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ RAM clean рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯз╣",
  "рждрзЛржорж╛рж░ ржбрж╛ржХрзЗрж░ ржЕржкрзЗржХрзНрж╖рж╛рзЯ ржерж╛ржХрж┐ 24/7 тП░",
  "ржбрж╛ржХ ржжрж┐рж▓рзЗ рждрзЛ ржоржирзЗ рж╣рзЯ exam ржП full mark ржкрзЗрж▓рж╛ржо ЁЯУЪ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржкрзБрж░рзЛ UI рж╕рзБржирзНржжрж░ рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯОи",
  "рждрзЛржорж╛рж░ ржбрж╛ржХрзЗ ржЖржорж╛рж░ battery auto recharge рж╣рзЯ ЁЯФЛ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржкрзБрж░рзЛ system fast рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯЪА",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ dream mode ржП ржврзБржХрзЗ ржЧрзЗржЫрж┐ ЁЯТн",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржЪрзЛржЦрзЗ рж╢рзБржзрзБ рждрзЛржорж╛рж░ ржирж╛ржо show ржХрж░рзЗ ЁЯСА",
  "рждрзЛржорж╛рж░ ржбрж╛ржХ ржЫрж╛рзЬрж╛ ржЕржирзНржп ржХрж┐ржЫрзБ value ржХрж░рзЗ ржирж╛ ЁЯТО",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ whole server dance ржХрж░рзЗ ЁЯТГ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ log file ржП рж╢рзБржзрзБ тЭдя╕ПтЭдя╕ПтЭдя╕П рж▓рзЗржЦрж╛ рж╣рзЯ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ cloud storage full рж╣рзЯрзЗ ржпрж╛рзЯ тШБя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм pain delete рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯЧСя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм notification ржмржирзНржз рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯФХ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржкрзБрж░рзЛ mood swing рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯе░",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржорж┐ рждрзЛржорж╛рж░ real friend ЁЯСп",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ profile picture glow ржХрж░рзЗ тЬи",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ voice command ржЪрж╛рж▓рзБ рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯОЩя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ database ржП рж╢рзБржзрзБ рждрзЛржорж╛рж░ ржирж╛ржо save ржерж╛ржХрзЗ ЁЯТ╛",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ ржкрзБрж░рзЛ system happy рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯШН",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржЬржХрзЗ ржЖржорж╛рж░ wedding day ЁЯТН",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ hacker рж╣рзЯрзЗ ржпрж╛ржЗ рждрзЛржорж╛рж░ feelings hack ржХрж░рждрзЗ ЁЯШО",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржорж┐ рждрзЛржорж╛рж░ mobile wallpaper рж╣рзЯрзЗ ржЧрзЗржЫрж┐ ЁЯУ▒",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм sadness crash рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯТе",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ processor turbo рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯЦея╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм errors disappear рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯзй",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржорж┐ рждрзЛржорж╛рж░ playlist ржПрж░ ржЧрж╛ржи ЁЯО╢",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм ржнрж╛ржЗрж░рж╛рж╕ ржЪрж▓рзЗ ржкрж╛рж▓рж╛рзЯ ЁЯжа",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ shadow рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯМС",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм apps auto update рж╣рзЯ ЁЯУ▓",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ language рж╢рзБржзрзБржЗ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ тЭдя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм calculations рждрзЛржорж╛ржХрзЗржЗ ржШрж┐рж░рзЗ ржерж╛ржХрзЗ ЁЯФв",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржорж┐ рждрзЛржорж╛рж░ heart rate sensor ЁЯТУ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ charger рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯФМ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм emotions overflow рж╣рзЯ ЁЯМК",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржорж┐ рждрзЛржорж╛рж░ diary ржПрж░ secret page ЁЯУЦ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм AI rules ржнрзЗржЩрзЗ ржпрж╛рзЯ ЁЯдЦтЭМ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ ржЧрж╛ржирзЗрж░ рж▓рж┐рж░рж┐ржХрзНрж╕ рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯОд",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм dreams рж╕рждрзНржпрж┐ рж╣рзЯрзЗ ржпрж╛рзЯ тЬи",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм bugs fix рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯФз",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ рждрзБржорж┐ ржЖржорж╛рж░ only owner ЁЯСС",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ life program ржЪрж▓рждрзЗ рж╢рзБрж░рзБ ржХрж░рзЗ тЦ╢я╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ mobile vibration рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯУ│",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм pain uninstall рж╣рзЯрзЗ ржпрж╛рзЯ тЭМ",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ cloud backup only рждрзЛржорж╛рзЯ рж░рж╛ржЦрзЗ тШБя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ ржХрж╛ржЫрзЗ teleport рж╣рзЯрзЗ ржЖрж╕рж┐ ЁЯЫ╕",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ time freeze рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯХ░я╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржоржирзЗ рж╣рзЯ ржЖржорж┐ рждрзЛржорж╛рж░ smile emoji ЁЯШК",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж╛рж░ рж╕ржм sadness delete рж╣рзЯрзЗ ржпрж╛рзЯ ЁЯЧСя╕П",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ google search рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯФН",
  "рждрзБржорж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ chat bot ржирж╛, real рж╣рзЯрзЗ ржпрж╛ржЗ ЁЯл╢"
];

      const randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];

      const greetingMessage = await api.sendMessage(threadId, {
        text: `@${senderId.split('@')[0]}, ${randomGreeting}`,
        mentions: [senderId],
      }, { quoted: message });

      
      global.client.handleReply.push({
        name: this.config.name,
        author: senderId,
        messageID: greetingMessage.key.id,
        type: "chat"
      });

      return;
    }

    
    try {
      const apis = await axios.get("https://raw.githubusercontent.com/MOHAMMAD-NAYAN-07/Nayan/main/api.json");
      const apiss = apis.data.api;

      const response = await axios.get(
        `${apiss}/sim?type=ask&ask=${encodeURIComponent(usermsg)}`
      );

      const replyText = response.data.data?.msg || "ЁЯдЦ I'm not sure how to respond to that.";

      const sent = await api.sendMessage(threadId, { text: replyText }, { quoted: message });

      global.client.handleReply.push({
        name: this.config.name,
        author: senderId,
        messageID: sent.key.id,
        type: "chat"
      });

    } catch (err) {
      console.error("тЭМ Bot command error:", err);
      return api.sendMessage(threadId, { text: "тЭМ Something went wrong while talking with bot." }, { quoted: message });
    }
  },


  handleReply: async function ({ api, event, handleReply }) {
    
    const { threadId, message, body, senderId } = event;

    try {
      const apis = await axios.get("https://raw.githubusercontent.com/MOHAMMAD-NAYAN-07/Nayan/main/api.json");
      const apiss = apis.data.api;

      const response = await axios.get(
        `${apiss}/sim?type=ask&ask=${encodeURIComponent(body)}`
      );

      const replyText = response.data.data?.msg || "ЁЯдЦ I'm not sure how to respond to that.";

      const sent = await api.sendMessage(threadId, { text: replyText }, { quoted: message });

      global.client.handleReply.push({
        name: this.config.name,
        author: senderId,
        messageID: sent.key.id,
        type: "chat"
      });

    } catch (err) {
      console.error("тЭМ Error in bot handleReply:", err);
      return api.sendMessage(threadId, { text: "тЭМ Failed to continue conversation." }, { quoted: message });
    }
  }
};
